name: ci-release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Download the APK artifact
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-artifacts
          path: release-files

      # 3. Extract version from pubspec.yaml
      - name: Extract version from pubspec.yaml
        id: get_version
        run: |
          VERSION=$(grep '^version:' quiz_app/pubspec.yaml | awk '{print $2}' | cut -d'+' -f1)
          if [ -z "$VERSION" ]; then
            echo "Error: Version not found in pubspec.yaml"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # 4. Rename APK with version
      - name: Rename APK artifact
        run: |
          mkdir -p release-files
          mv release-files/app-release.apk release-files/app-release-v${{ steps.get_version.outputs.version }}.apk

      # 5. Create or update release tag
      - name: Create or update release tag
        run: |
          TAG="v${{ steps.get_version.outputs.version }}"
          git tag -f "$TAG"
          git push origin "$TAG" --force

      # 6. Get PR description
      - name: Get PR description
        id: pr
        uses: actions-ecosystem/action-get-merged-pull-request@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      # 7. Extract release notes from PR body
      - name: Extract release notes
        id: extract_notes
        run: |
          PR_BODY="${{ steps.pr.outputs.body }}"
          NOTES=$(echo "$PR_BODY" | sed -n '/## Release Notes/,/## /p' | sed '1d;$d' || true)
          [ -z "$NOTES" ] && NOTES="No release notes provided."
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          echo "$NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # 8. Create GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: "v${{ steps.get_version.outputs.version }}"
          body: |
            ## Release Notes
            ${{ steps.extract_notes.outputs.notes }}
          files: |
            release-files/app-release-v${{ steps.get_version.outputs.version }}.apk